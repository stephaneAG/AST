html, body { margin: 0; padding: 0; }
    
    .container { }
    
    /* for the iMac "big" view */
    @media (min-width: 2548px) and (min-height: 1315px) {
      #audioVisualizer, #testDiv { margin-top: 17%; }
      #controls { margin-top: 15px !important; }
    }
    
    #audioVisualizer {
      background-color: transparent; /*#254b74;*/ /* quite dark blue - adjust to change the background  */
      /* the following is for an even more fancier background */
      height: 300px;
      /*width: 800px;*/
      width: 100%;
      /*border: 1px dashed grey;*/
      z-index: 1;
    }
    
    #audioVisualizer canvas {
      position: absolute;
      width: inherit;
      height: inherit;
    }
    
    #audioVisualizer:after {
      content: "";
      position: absolute;
      z-index: -1; /* change this to adjust the grid visibility ? */
      width: inherit;
      height: inherit;
      background-color: #434343;
      background-image: linear-gradient(#434343, #282828);
    }
    
    /* fancy grid for the background of the visualizer ( R: we should be able to adjust the grid size by adjusting the corresponding css ? -> test ! ;P ) */
    .grid {
      background-color: transparent;
      background-image: linear-gradient(0deg, transparent 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, transparent 77%, transparent), linear-gradient(90deg, transparent 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, transparent 77%, transparent);
      /*height: 100%;*/
      background-size: 50px 50px; /* adjust this to get smaller/bigger squares for the grid */
    }
    
    body {
      //background: orange;
    }
    
    /* vertical ranges */
    .vranger {
      margin-top: 50px;
      margin-left: -50px;
      margin-right: -50px;
      transform: rotate(270deg);
      -moz-transform: rotate(270deg); /*do same for other browsers if required*/
    }
    
    /* trying to have the left/bottom side of the track ( aka, below/left to the thumb ) */
    input[type=range]:not(:disabled)::-webkit-slider-runnable-track {
      /*background-image: linear-gradient(to right, transparent, #69b6d5);*/ /*linear-gradient(to right, #909090, #69b6d5);*/ /* blue to gray */ /*linear-gradient(to left, hsl(0, 50%, 100%), #69b6d5);*/ /* blue to transparent */
      /*height: 12px;*/
      height: 4px;
      top:1px;
      /*margin-top: -10px;*/
      /*display: none;*/
      cursor: pointer;
      /*background: #69b6d5;*/
      /*border: 1px solid #69b6d5;*/
      /*box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;*/
      /*background: #3071a9;*/
      border-radius: 5px;
      /*border: 0.2px solid #010101;*/
    }
    
    input[type=range]:not(:disabled):active::-webkit-slider-runnable-track {
      background-image: linear-gradient(to right, transparent, #69b6d5); /*linear-gradient(to right, #909090, #69b6d5);*/ /* blue to gray */ /*linear-gradient(to left, hsl(0, 50%, 100%), #69b6d5);*/ /* blue to transparent */
      border: 1px solid #69b6d5;
    }
    
    input[type=range]:not(:disabled)::-webkit-slider-thumb {
      /*box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;*/
      /*border: 1px solid #000000;*/
      /*height: 36px;*/
      /*width: 16px;*/
      /*border-radius: 3px;*/
      /*background: #ffffff;*/
      /*cursor: pointer;*/
      /*-webkit-appearance: none;*/
      /*margin-top: -14px;*/
      margin-top: -6px;
    }
    
    input[type=range]:not(:active)::-webkit-slider-thumb {
      margin-top: -5px;
    }
    
    input[type=range]:disabled::-webkit-slider-thumb {
      margin-top: -0px;
    }
    
    input[type=range]::-webkit-slider-runnable-track::after { background: red; }
    
    input[type=range]:focus::-webkit-slider-runnable-track {
       /*background: #367ebd;*/
    }
    
    input[type=range]:focus {
      /*outline: red;*/
      color: red !important;
    }
    
    /* trying to see if we can have css transition for a range slider's thumb when it's value is changed via js & not by directly operating it */
    input[type=range]::-webkit-slider-thumb {
      transition: all;
    }
    
    /* trying to get no blu-ish outline from webkit but instead just a nice blue text color for focused input ( R: 'd be also nice to have colored on change .. uniquely using css ? ;p ) */
    input[type=text]:focus {
      outline: none;
      color: #69b6d5;
    }    
    
    
    #controls {
      height: 300px;
      width: 510px;
      margin: 0 auto;	
    }
    
    /* controls styling / layout */
    .ctrlOverWrap {
      position:  relative;
      /* height:  auto; */
      height: 300px;
      width: 76px;
      float: left;
      margin-right: 30px;
    }
    
    .ctrlOverWrap:not(.disabled) {
      border-bottom: 1px solid #69b6d5;	
    }
    
    .ctrl_wrapper {
      /* position:  absolute; */
      top: 50%;
      right: 50%;
      height: 250px;
      width: 76px;
      /* border:  1px solid red; */
    }
    .ctrl_wrapper .vranger {
      position: absolute;
      top: 90px;
      left: -65px;
      height: 40px;
      width: 200px;
      margin-top: 50px;
      /* margin-left: -50px; */
      /* margin-right: -50px; */
      padding: 0;
      margin: 0;
      transform: rotate(270deg);
      border: 1px solid blue;
    }
    .ctrl_wrapper .val {
      text-align: center;
      position: absolute;
      bottom: 50px;
      /* z-index: 3; */
      height: 20px;
      width: 70px;	
    }
    p.ctrl_name {
      text-align: center;
      color:  gray;	
    }
    
    
    .radioCtrlOverWrap {
      height: 300px;
      width: 170px;
      float: left;
      padding-top: 17px;
      padding-left: 10px;
      padding-right: 10px;
    }
    .radioCtrl_wrapper {
      position: relative;
      /* height: auto; */
      height: 76px;
      width: 130px;
      float: left;
      /*padding-bottom: 10px;*/
      /*padding-top: 10px;*/
      padding-bottom: 0px;
      padding-top: 48.5px;
    }
    
    /* styling the radio buttons a littl' bit */
    label { padding-left: 8px; color: grey; -webkit-user-select: none; }
    /*
    .check {
      
      display: block;
      position: absolute;
      border: 5px solid #AAAAAA;
      border-radius: 100%;
      height: 25px;
      width: 25px;
      top: 30px;
      left: 20px;
      z-index: 5;
      transition: border .25s linear;
      -webkit-transition: border .25s linear;
      
    }
    
    label {
      display: block;
      position: relative;
      font-weight: 300;
      font-size: 1.35em;
      padding: 25px 25px 25px 80px;
      margin: 10px auto;
      height: 30px;
      z-index: 9;
      cursor: pointer;
      -webkit-transition: all 0.25s linear;
    }
    
    .check::before {
      display: block;
      position: absolute;
	  content: '';
      border-radius: 100%;
      height: 15px;
      width: 15px;
      top: 5px;
	  left: 5px;
      margin: auto;
	  transition: background 0.25s linear;
	  -webkit-transition: background 0.25s linear;
    }

    
    input[type=radio]{
      position: absolute;
      visibility: hidden;
    }
    
    input[type=radio]:checked ~ .check {
      border: 5px solid #0DFF92;
    }

    input[type=radio]:checked ~ .check::before{
      background: #0DFF92;
    }

    input[type=radio]:checked ~ label{
      color: #0DFF92;
    }
    */
    
    
    /*
    input[type=radio]{
      position: absolute;
      visibility: hidden;
    }
    */
    
    
    /*
    input[type=radio]:not(:checked ~ label){
      color: black;
    }
    */
    
    /*
    input[type=radio]:checked ~ label{
      color: #0DFF92;
    }
    */
    
    
    /*
    input[type=radio]:before {
      display: block;
      position: absolute;
	  content: 'yo';
      border-radius: 100%;
      height: 5px;
      width: 5px;
      top: 2.5px;
	  left: 2.5px;
      margin: auto;
	  transition: background 0.25s linear;
	  -webkit-transition: background 0.25s linear;
    }
    
    
    input[type=radio]:before {
      display: block;
      position: absolute;
      content: '';
      border-radius: 100%;
      height: 10px;
      width: 10px;
      top: 1px;
      left: -18.5px;
      margin: auto;
      transition: background 0.25s linear;
      -webkit-transition: background 0.25s linear;
    }
    
    
    input[type=radio]:checked::before{
      background: #0DFF92;
    }
    
    input[type=radio]:checked {
      border: 5px solid #0DFF92;
    }
    */
    
    
    /*
    input[type=radio]:checked + label::before {
      display: block;
      position: absolute;
      content: '';
      border-radius: 100%;
      height: 10px;
      width: 10px;
      top: 1px;
      left: -18.5px;
      margin: auto;
      transition: background 0.25s linear;
      -webkit-transition: background 0.25s linear;
    }
    
    input[type=radio]:checked + label::before{
      background: #0DFF92;
    }
    
    input[type=radio]:checked + label::before {
      border: 5px solid #0DFF92;
    }
    */
    
    input[type=radio]{
      position: absolute;
      visibility: hidden;
    }
    
    input[type=radio]:checked + label{
      color: #69b6d5;
    }
    
    /*
    input[type=radio]:checked + label::before{
      content: '';
      display: inline-block;
      border-radius: 15px;
      background-color: #69b6d5;
      height: 10px;
      width: 10px;
      transition: color 5s linear;
      left: -14.5px;
      top: 52.5px;
      position: absolute;
    }
    */
    
    /*
    input[type=radio] + label::before{
      
      color: red;
      content: '-';
      left: -18.5px;
      position: absolute;
      
    }
    */
    
    /* -- THE FOLLOWING WORKS FINE -- */
    
    /*
    input[type=radio]:checked + label::before{
      content: '->';
      left: -18.5px;
      position: absolute;
      color: gray;
      -webkit-transition: color 5s linear;
      transition: color 5s linear;
    }
    */
    
    /* size adjust */
    input[type=radio] + label::after{
      /*font-size: 25px;*/
    }
    input[type=radio] + label::before{
      /*font-size: 20px;*/
    }
    
    /* not selected */
    input[type=radio] + label::after{
      /*
      content: '○';
      left: -18.5px;
      position: absolute;
      color: #69b6d5;
      display: none;
      -webkit-transition: color 5s linear;
      transition: color 5s linear;
      */
    }
    input[type=radio] + label::before{ /* top:59.5px */
      /*
      content: '○';
      font-size: 25px;
      left: -18.5px;
      position: absolute;
      color: #69b6d5;
      -webkit-transition: color 5s linear;
      transition: color 5s linear;
      */
    }
    
    /* selected */
    input[type=radio]:checked + label::before{ /*     top: 45.5px; */
      content: '•'; /* &#10687; = ⦿, see http://www.evotech.net/articles/testjsentities.html */
      left: -18.5px;
      font-size: 20px;
      position: absolute;
      color: #69b6d5;
      -webkit-transition: color 5s linear;
      transition: color 5s linear;
    }
    input[type=radio]:checked + label::after{
      content: 'lo'; 
      left: -18.5px;
      position: absolute;
      color: #69b6d5;
      display: none;
      -webkit-transition: color 5s linear;
      transition: color 5s linear;
    }
    
    /*
    input[type=radio]:checked + label::after{
      content: '<';
      right: 18.5px;
      position: absolute;
      color: gray;
      -webkit-transition: color 5s linear;
      transition: color 5s linear;
    }
    */
    
    /* -- since the above is simpler that the tut', I should be able to have background & css shapes as well using before & after ;) -- */
    
    
    /*
    input[type=radio]:checked + label::after{
      content: '';
      left: -18.5px;
      position: absolute;
      color: gray;
      border: 5px solid #0DFF92;
      background: #0DFF92;
      border-radius: 100%;
      height: 15px;
      width: 15px;
      -webkit-transition: color 5s linear;
      transition: color 5s linear;
    }
    
    
    
    input[type=radio]:checked + label::after{
      content: '';
      left: -18.5px;
      position: absolute;
      z-index: -1;
      display: inline-block;
      width: 15px;
      height: 15px;
      -moz-border-radius: 15px;
      -webkit-border-radius: 15px;
      border-radius: 15px;
      background-color: #69b6d5;
    }
    */
    
    
    /* -- seems to be a bogus above, the 2 can't be separated ?! -- */
    
    /* -- the following is a version with dots ;) -- */
    
    /*
    input[type=radio] + label::after{
      content: '';
      left: -18.5px;
      position: absolute;
      color: gray;
      border: 2px solid blue;
      border-radius: 100%;
      height: 15px;
      width: 15px;
      -webkit-transition: color 5s linear;
      transition: color 5s linear;
    }
    input[type=radio] + label::after{
      content: '';
      left: -18.5px;
      position: absolute;
      z-index: -1;
      display: inline-block;
      width: 10px;
      height: 10px;
      -moz-border-radius: 15px;
      -webkit-border-radius: 15px;
      border-radius: 15px;
      background-color: white;
    }
    */
    
    
    /*
    input[type=radio]:checked + label::after{
      content: '';
      left: -18.5px;
      position: absolute;
      color: gray;
      border: 5px solid red;
      background: #0DFF92;
      border-radius: 100%;
      height: 10px;
      width: 10px;
      -webkit-transition: color 5s linear;
      transition: color 5s linear;
    }
    input[type=radio]:checked + label::after{
      content: '';
      left: -18.5px;
      position: absolute;
      z-index: -1;
      display: inline-block;
      width: 10px;
      height: 10px;
      -moz-border-radius: 15px;
      -webkit-border-radius: 15px;
      border-radius: 15px;
      background-color: #69b6d5;
    }
    */
    
    /* clean ,simple slection for radio buttons */
    input[type=radio]:checked + label::before {
      vertical-align: -1.5px;
      display: inline-block;
      top: 50%;
      content: '•';
      left: -18.5px;
      padding-right: 10px;
      font-size: 20px;
      position: inherit;
      color: #69b6d5;
      -webkit-transition: all 5s linear;
      transition: all 5s linear;
    }
    
    input[type=radio] + label {
      cursor: pointer;
    }
    
    
    
    
    
    
    
    
    
    
    
    
    /*  for the Webkit sources ! -> http://trac.webkit.org/browser/trunk/Source/WebCore/css/html.css#L946 */
/*

    input[type="range"] {
714	    -webkit-appearance: slider-horizontal;
715	    padding: initial;
716	    border: initial;
717	    margin: 2px;
718	    color: #909090;
719	}
720	
721	input[type="range"]::-webkit-slider-container, input[type="range"]::-webkit-media-slider-container {
722	    flex: 1;
723	    box-sizing: border-box;
724	    display: flex;
725	    align-contents: center;
726	}
727	
728	input[type="range"]::-webkit-slider-runnable-track {
729	    flex: 1;
730	    align-self: center;
731	
732	    box-sizing: border-box;
733	    display: block;
734	}
735	
736	input[type="range"]::-webkit-slider-thumb, input[type="range"]::-webkit-media-slider-thumb {
737	    -webkit-appearance: sliderthumb-horizontal;
738	    box-sizing: border-box;
739	    display: block;
740	#if defined(WTF_PLATFORM_IOS) && WTF_PLATFORM_IOS
741	    background-color: white;
742	    border: 1px solid rgb(66, 66, 66);
743	    padding: 0px;
744	#endif
745	}
746	
747	#if defined(WTF_PLATFORM_IOS) && WTF_PLATFORM_IOS
748	input[type="range"]::-webkit-slider-thumb:active {
749	    background-color: black;
750	}

*/




/*  quick console  */
#console {
  display: none; /* currently not used at all, so hidden */
  font-family: 'monospace';
  font-size: 15px;
  width: 900px;
  height: 200px;
  /* border: 1px dashed grey; */
  position: absolute;
  background: rgba(0,0,0,0.1);
  bottom: 0;
  left: calc( 50% - 475px );	
}
.logs {
  margin: 0;
  padding-top: 10px;
  padding-left: 10px;	
}
#consoleInput {
  /*box-sizing: border-box;*/
  padding-left: 10px; /*margin-left: 10px;*/
  font-size: 15px;
  outline:0px !important;
  -webkit-appearance:none;
  position: absolute;
  bottom: 0px;
  width: calc( 100% - 10px ); /* compensate for padding-left */
  border: 1px solid transparent;
  /*
  border-top-width: 1px;
  border-top-color: grey;
  */
  padding-left: 10px !important;
  resize: vertical;
  margin-top: 0px;
  margin-bottom: 0px;
  height: 20px;
  max-height: 160px !important; /* nice hack that allows us to have an input that's resizable vertically & that still has a max-height from which it won't go above ;p */
}

::-webkit-resizer{
  background: 69b6d5;
}
::-webkit-resizer {
  /*
  border: 2px solid black;
    background: red;
    box-shadow: 0 0 5px 5px blue;
    outline: 2px solid yellow;
  */
  /*
  content: 'more';
  position: absolute;
  height: 10px;
  width: 10px;
  color: red;
  */
}

/* f u webkit outlines */
/*
textarea:hover, 
input:hover, 
textarea:active, 
input:active, 
textarea:focus, 
input:focus,
button:focus,
button:active,
button:hover
{
    outline:0px !important;
    -webkit-appearance:none;
}
*/

/* the following is an interesting page corner effect */
/* ::-webkit-resizer{ border: 9px solid rgba(0,0,0,.1); border-bottom-color: rgba(0,0,0,.5); border-right-color: rgba(0,0,0,.5); outline: 1px solid rgba(0,0,0,.2); box-shadow: 0 0 5px 3px rgba(0,0,0,.1) } */





/* test stuff to have a visible grid above the canvas - since it seems I can't eyt find a way to have a canvas with teansparent bckgrnd */
/*
#testDiv:after {
      content: "";
      position: absolute;
      z-index: -1;
      width: inherit;
      height: inherit;
      background-color: #434343;
      background-image: linear-gradient(#434343, #282828);
    }
*/
    
    /* fancy grid for the background of the visualizer ( R: we should be able to adjust the grid size by adjusting the corresponding css ? -> test ! ;P ) */
    #testDiv {
      position: absolute;
      height: 300px;
      width: 100%;
      top: 0px;
      left: 0px;
      z-index: 10;
      /*border: 1px solid red;*/	
      
      opacity: 0.5;
      /*
      background: white;
      background-blend-mode: exclusion;
      */
      background: #434343;
      background-blend-mode: luminosity	; /* screen, overlay, darken, lighten, color-dodge, color-burn, hard-light, soft-light, difference, exclusion, hue, saturation, color, and luminosity. And also normal */
      /*background-image: linear-gradient(0deg, red 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, red 27%, red 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, red 77%, red), linear-gradient(90deg, red 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, red 27%, red 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, red 77%, red);*/
      background-image:linear-gradient(0deg, transparent 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, transparent 77%, transparent), linear-gradient(90deg, transparent 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, transparent 77%, transparent);
      /*height: 100%;*/
      background-size: 50px 50px; /* adjust this to get smaller/bigger squares for the grid */
    }